# Communication


## SYNC

Synchronized communication is available through the REST API. You can call other microservices using the following curl command:

```
curl http://localhost:<serverPort>/rest/services/<serviceBaseName>
```

For example, if your communication block is as follows:

![alt text](https://i.imgur.com/4KLbJFL.png)
```
communication {
  client "backedone"
  server "backendtwo"
  type "sync"
  framework "rest-api"
}

```

This configuration means that backendone will act as the client, and backendtwo will act as the server. The client can make a REST call to the provided endpoint:

```
http://localhost:<serverPort>/rest/services/backendtwo
```
Note:-

When a server-side microservice is secured using OAuth2, typically with a tool like Keycloak, the responsibility for obtaining an access token and making REST API calls to that server lies with the client-side microservice. The client-side microservice is pre-configured with the necessary OAuth2 settings and retrieve the access token before making REST API requests to the protected microservice.

## ASYNC

Asynchronous communication is available via RabbitMQ. Both the consumer and producer are pre-configured. As soon as you start the application, the asynchronous communication is ready to use.